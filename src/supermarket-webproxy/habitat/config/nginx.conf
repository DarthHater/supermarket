worker_processes 4;

error_log  stderr;
pid {{pkg.svc_var_path}}/nginx.pid;
daemon off;

events {
  worker_connections 1024;
}

http {
  log_format supermarket '$remote_addr - $remote_user [$time_iso8601]  '
                     '"$request" $status $request_length "$request_time" $body_bytes_sent '
                     '"$http_referer" "$http_user_agent"';

  include       {{pkgPathFor "chef-server/openresty-noroot"}}/nginx/conf/mime.types;
  default_type  application/octet-stream;

  access_log stdout;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  keepalive_timeout 64;

  gzip on;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_proxied any;
  gzip_vary off;
  gzip_types   text/plain text/css application/x-javascript text/xml application/xml application/rss+xml application/atom+xml text/javascript application/javascript application/json;
  gzip_min_length  1000;
  gzip_disable     "MSIE [1-6]\.";

  server_names_hash_bucket_size 64;
  types_hash_max_size 2048;
  client_max_body_size 250m;

  upstream app {
    {{#eachAlive bind.upstream.members as |member| ~}}
    server {{member.sys.ip}}:{{member.cfg.port}};
    {{/eachAlive ~}}
  }

  log_format cache '$remote_addr - [$time_local] "$request" $upstream_cache_status $upstream_response_time $upstream_status';

  {{#if cfg.redirect-to-real-server.is_enabled ~}}
  server {
    listen {{cfg.redirect-to-real-server.port}};
    {{#with bind.upstream.first.cfg ~}}
    server_name {{fqdn}};
    location / {
      return 301 {{protocol}}://{{fqdn}}:{{port}}$request_uri;
    }
    {{/with ~}}
  }
  {{/if ~}}

  server {
    listen {{cfg.server.port}} default_server;
    server_name {{bind.upstream.first.cfg.fqdn}};

    {{#if cfg.server.is_ssl ~}}
    ssl on;
    ssl_certificate {{pkg.svc_data_path}}/ca/supermarket.cert;
    ssl_certificate_key {{pkg.svc_data_path}}/ca/supermarket.key;
    ssl_prefer_server_ciphers on;
    ssl_ciphers {{cfg.ssl_ciphers}};
    ssl_protocols {{cfg.ssl_protocols}};
    ssl_session_cache shared:SSL:4m;
    ssl_session_timeout 5m;
    ssl_dhparam {{pkg.svc_data_path}}/ca/dhparams.pem;
    {{/if ~}}

    set $redirect_to_canonical 0;

    {{#with bind.upstream.first.cfg ~}}
    # Redirect anything that isn't an ip address (for ELB checks) or the
    # canonical server name to the configured FQDN
    if ($host !~* "^({{fqdn}}|[0-9.]+)$") {
      set $redirect_to_canonical H;
    }

    if ($redirect_to_canonical = H) {
      return 301 {{protocol}}://{{fqdn}}:{{port}}$request_uri;
    }
    {{/with ~}}

    # location ~ /sitemap\d*.xml.gz {
    #   root <%= @app_directory %>/public;
    #   break;
    # }

    # location ~ ^/(assets|system)/ {
    #   root {{pkg.svc_var_path}}/public;
    #   expires 1y;
    #   add_header Cache-Control public;
    #   add_header ETag "";
    #   break;
    # }

    location / {
      proxy_set_header HOST $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
      proxy_pass http://app;
      proxy_redirect off;

      # to serve gzipped text and json responses
      gzip on;
      gzip_min_length 1000;
      gzip_proxied expired no-cache no-store private auth;
      gzip_types text/plain application/json;
    }
  }
}
